@model Agm.Models.Class.groupsModel

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_UserIndex.cshtml";
}

<script src="~/scripts/WordToSpeak.js"></script>
<script>
    $(document).ready(function () {
       
        wordtospeak('Grup kurma sayfasındasınız grup adını giriniz ve enter tuşuna basınız', false);
      
        //$('body').keyup(function (e) {
            //var key = e.which;

            //var focusGad = $('#groupName').is(':focus');
  

                SetSesliYardim();
                $('#groupName').focus();
               
            if (key == 10) 
            {
                $(".createFormBtn").trigger("click");
            }
        //});
    });

</script>

@using (Html.BeginForm(null, null, FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    <div class="container createGroupContainer">
        <div class="input-group mb-3">
            <div class="form-group createFormGroup">
                <label for="exampleInputEmail1"><b>Grup Adı</b></label>
                @Html.EditorFor(model => model.groupName, new { htmlAttributes = new { @class = "form-control", placeholder = "Lütfen bir grup adı giriniz" } })
                <small id="emailHelp" class="form-text text-muted">@Html.ValidationMessageFor(model => model.groupName, "", new { @class = "text-danger" })</small>
            </div>
               
           
            </div>

            <div class="form-group createFormGroup">
                <label for="exampleFormControlFile1"><b>Grup Resmi</b></label>
                <input type="file" name="file" class="form-control-file" id="exampleFormControlFile1" />
                <small id="emailHelp" class="form-text text-muted">@Html.ValidationMessageFor(model => model.groupImageUrl, "", new { @class = "text-danger" })</small>
            </div>
            <button type="submit" class="btn btn-primary createFormBtn">
                Oluştur
            </button>

        </div>
}